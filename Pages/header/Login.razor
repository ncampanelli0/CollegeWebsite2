@page "/login"
@inject ProtectedLocalStorage storage
@inject NavigationManager navigate

    <input type="text" placeholder="email" @bind-value = "email"/>
    <br />
    <input type="password" placeholder="password" @bind-value = "password"/>
    <button @onclick="login" class = "btncolor">login</button>

    <p style="color: red">@notification</p>

@code
{
    Mongo mongo = new Mongo("college-site-2");

    private string? email { get; set; }
    private string? password { get; set; }

    string notification = "";

    private async Task login()
    {
        if (email != null && password != null)
        {
            var queryUser = mongo.LoadRecordByString<AllUser>("allUser", "Email", email);
            if (email == queryUser.Email && password == queryUser.Password)
            {
                await storage.SetAsync("email", queryUser.Email);
                await storage.SetAsync("accountType", queryUser.AccountType);
                await storage.SetAsync("userId", queryUser.Id);
                await storage.SetAsync("firstName", queryUser.FirstName);
                await storage.SetAsync("lastName", queryUser.LastName);
                await storage.SetAsync("address", queryUser.Address);
                await storage.SetAsync("phoneNumber", queryUser.PhoneNumber);
                await storage.SetAsync("advisor", queryUser.Advisor);
                await storage.SetAsync("holdStatus", queryUser.Holds);
                await storage.SetAsync("major", queryUser.Major);
                await storage.SetAsync("minor", queryUser.Minor);
                await storage.SetAsync("loggedIn", true);
                
                navigate.NavigateTo("/homepage");
            }
        }
        else
        {
            notification = "invalid username or password";
        }

    }

}