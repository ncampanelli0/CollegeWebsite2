@page "/visitor/viewcourses"
@page "/undergraduate/viewcourses"
@page "/graduate/viewcourses"
@page "/admin/viewcourses"
@page "/faculty/viewcourses"


<MudDataGrid Items="@queryCourse" MultiSelection="true" SortMode="SortMode.Multiple" Filterable="true" FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive">
    <Columns>
        <PropertyColumn Title="Department" Property="x => x.Department" />
        <PropertyColumn Title="Course Name" Property="x => x. CourseName" />
        <PropertyColumn Title="Credits" Property="x => x.Credits" />
        <PropertyColumn Title="Course ID" Property="x => x.CourseID" />
        <PropertyColumn Title="Prerequiste 1 (grade required)" Property='x => $"{x.Prerequiste[0].Prereq} ({x.Prerequiste[0].MinimumRequirements})"' />
        <PropertyColumn Title="Prerequiste 2 (grade required)" Property='x => $"{x.Prerequiste[1].Prereq} ({x.Prerequiste[1].MinimumRequirements})"' />
        <PropertyColumn Title="Prerequiste 3 (grade required)" Property='x => $"{x.Prerequiste[2].Prereq} ({x.Prerequiste[2].MinimumRequirements})"' />
        <PropertyColumn Title="Prerequiste 4 (grade required)" Property='x => $"{x.Prerequiste[3].Prereq} ({x.Prerequiste[3].MinimumRequirements})"' />
        <PropertyColumn Title="Prerequiste 5 (grade required)" Property='x => $"{x.Prerequiste[4].Prereq} ({x.Prerequiste[4].MinimumRequirements})"' />
        <PropertyColumn Title="Prerequiste 6 (grade required)" Property='x => $"{x.Prerequiste[5].Prereq} ({x.Prerequiste[5].MinimumRequirements})"' />
        <PropertyColumn Title="Prerequiste 7 (grade required)" Property='x => $"{x.Prerequiste[6].Prereq} ({x.Prerequiste[6].MinimumRequirements})"' />
        <PropertyColumn Title="Prerequiste 8 (grade required)" Property='x => $"{x.Prerequiste[7].Prereq} ({x.Prerequiste[7].MinimumRequirements})"' />

    </Columns>
    <PagerContent>
        <MudDataGridPager T="Course" />
    </PagerContent>
</MudDataGrid>


@code
{

    Mongo mongo = new Mongo("college-site-2");
    List<Course> queryCourse;

    protected override async Task OnInitializedAsync()
    {
        queryCourse = mongo.LoadRecord<Course>("course");
    }

}