@page "/visitor/viewrequirements"
@page "/undergraduate/viewrequirements"
@page "/graduate/viewrequirements"
@page "/admin/viewrequirements"
@page "/faculty/viewrequirements"

<h2>majors</h2>


<MudExpansionPanels MultiExpansion="false">
    <MudExpansionPanel Class="panels" Text="American Studies">
        <ol>
            @for (int i = 0; i < majorInfo[0].majorGrade.Length; i++)
            {
                <li>@majorInfo[0].majorCourses[i] (@majorInfo[0].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Biological Sciences">
        <ol>
            @for (int i = 0; i < majorInfo[1].majorGrade.Length; i++)
            {
                <li>@majorInfo[1].majorCourses[i] (@majorInfo[1].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Chemistry and Physics">
        <ol>
            @for (int i = 0; i < majorInfo[2].majorGrade.Length; i++)
            {
                <li>@majorInfo[2].majorCourses[i] (@majorInfo[2].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Computer Science">
        <ol>
            @for (int i = 0; i < majorInfo[3].majorGrade.Length; i++)
            {
                <li>@majorInfo[3].majorCourses[i] (@majorInfo[3].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Criminology">
        <ol>
            @for (int i = 0; i < majorInfo[4].majorGrade.Length; i++)
            {
                <li>@majorInfo[4].majorCourses[i] (@majorInfo[4].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="English">
        <ol>
            @for (int i = 0; i < majorInfo[5].majorGrade.Length; i++)
            {
                <li>@majorInfo[5].majorCourses[i] (@majorInfo[5].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Health and Society">
        <ol>
            @for (int i = 0; i < majorInfo[6].majorGrade.Length; i++)
            {
                <li>@majorInfo[6].majorCourses[i] (@majorInfo[6].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="History and Philosophy">
        <ol>
            @for (int i = 0; i < majorInfo[7].majorGrade.Length; i++)
            {
                <li>@majorInfo[7].majorCourses[i] (@majorInfo[7].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

        <MudExpansionPanel Class="panels" Text="Industrial and Labor Relations">
        <ol>
            @for (int i = 0; i < majorInfo[8].majorGrade.Length; i++)
            {
                <li>@majorInfo[8].majorCourses[i] (@majorInfo[8].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Mathematics">
        <ol>
            @for (int i = 0; i < majorInfo[9].majorGrade.Length; i++)
            {
                <li>@majorInfo[9].majorCourses[i] (@majorInfo[9].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Modern Language">
        <ol>
            @for (int i = 0; i < majorInfo[10].majorGrade.Length; i++)
            {
                <li>@majorInfo[10].majorCourses[i] (@majorInfo[10].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Politics,Economics and Law">
        <ol>
            @for (int i = 0; i < majorInfo[11].majorGrade.Length; i++)
            {
                <li>@majorInfo[11].majorCourses[i] (@majorInfo[11].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Psychology">
        <ol>
            @for (int i = 0; i < majorInfo[12].majorGrade.Length; i++)
            {
                <li>@majorInfo[12].majorCourses[i] (@majorInfo[12].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

 <MudExpansionPanel Class="panels" Text="Sociology">
        <ol>
            @for (int i = 0; i < majorInfo[13].majorGrade.Length; i++)
            {
                <li>@majorInfo[13].majorCourses[i] (@majorInfo[13].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Visual Arts">
        <ol>
            @for (int i = 0; i < majorInfo[14].majorGrade.Length; i++)
            {
                <li>@majorInfo[14].majorCourses[i] (@majorInfo[14].majorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>
    </MudExpansionPanels>

<h2>minors</h2>

    <MudExpansionPanels MultiExpansion="false">
   <MudExpansionPanel Class="panels" Text="Chemistry">
        <ol>
             @for (int i = 0; i < minorInfo[0].minorGrade.Length; i++)
            {
                <li>@minorInfo[0].minorCourses[i] (@minorInfo[0].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Computer Information Science">
        <ol>
             @for (int i = 0; i < minorInfo[1].minorGrade.Length; i++)
            {
                <li>@minorInfo[1].minorCourses[i] (@minorInfo[1].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

  <MudExpansionPanel Class="panels" Text="Enviromental Studies">
        <ol>
            @for (int i = 0; i < minorInfo[2].minorGrade.Length; i++)
            {
                <li>@minorInfo[2].minorCourses[i] (@minorInfo[2].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Global Studies">
        <ol>
            @for (int i = 0; i < minorInfo[3].minorGrade.Length; i++)
            {
                <li>@minorInfo[3].minorCourses[i] (@minorInfo[3].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Hispanic Culture Studies">
        <ol>
            @for (int i = 0; i < minorInfo[4].minorGrade.Length; i++)
            {
                <li>@minorInfo[4].minorCourses[i] (@minorInfo[4].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Mathematics">
        <ol>
           @for (int i = 0; i < minorInfo[5].minorGrade.Length; i++)
            {
                <li>@minorInfo[5].minorCourses[i] (@minorInfo[5].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Media Design">
        <ol>
            @for (int i = 0; i < minorInfo[6].minorGrade.Length; i++)
            {
                <li>@minorInfo[6].minorCourses[i] (@minorInfo[6].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Media and Communications">
        <ol>
           @for (int i = 0; i < minorInfo[7].minorGrade.Length; i++)
            {
                <li>@minorInfo[7].minorCourses[i] (@minorInfo[7].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Philisophy and Religion">
        <ol>
           @for (int i = 0; i < minorInfo[8].minorGrade.Length; i++)
            {
                <li>@minorInfo[8].minorCourses[i] (@minorInfo[8].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

 <MudExpansionPanel Class="panels" Text="Physics">
        <ol>
            @for (int i = 0; i < minorInfo[9].minorGrade.Length; i++)
            {
                <li>@minorInfo[9].minorCourses[i] (@minorInfo[9].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="PreLaw Studies">
        <ol>
            @for (int i = 0; i < minorInfo[10].minorGrade.Length; i++)
            {
                <li>@minorInfo[10].minorCourses[i] (@minorInfo[10].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Prehealth Studies">
        <ol>
            @for (int i = 0; i < minorInfo[11].minorGrade.Length; i++)
            {
                <li>@minorInfo[11].minorCourses[i] (@minorInfo[11].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Public Policy">
        <ol>
           @for (int i = 0; i < minorInfo[12].minorGrade.Length; i++)
            {
                <li>@minorInfo[12].minorCourses[i] (@minorInfo[12].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

   <MudExpansionPanel Class="panels" Text="Spanish">
        <ol>
            @for (int i = 0; i < minorInfo[13].minorGrade.Length; i++)
            {
                <li>@minorInfo[13].minorCourses[i] (@minorInfo[13].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>

    <MudExpansionPanel Class="panels" Text="Visual Arts">
        <ol>
            @for (int i = 0; i < minorInfo[14].minorGrade.Length; i++)
            {
                <li>@minorInfo[14].minorCourses[i] (@minorInfo[14].minorGrade[i] or higher required)</li>
            }
        </ol>
    </MudExpansionPanel>
    </MudExpansionPanels>

@code
{
    bool open;
    Anchor anchor;

    public class MajorInfo
    {
        public string majorName { get; set; }
        public string[] majorGrade { get; set; }
        public string[] majorCourses { get; set; }
    }

    public class MinorInfo
    {
        public string minorName { get; set; }
        public string[] minorGrade { get; set; }
        public string[] minorCourses { get; set; }
    }


    Mongo mongo = new Mongo("college-site-2");
    List<Majors> queryMajor = new List<Majors> { };
    List<Minors> queryMinor = new List<Minors> { };

    List<MajorInfo> majorInfo = new List<MajorInfo> { };
    List<MinorInfo> minorInfo = new List<MinorInfo> { };

    protected override async Task OnInitializedAsync()
    {
        queryMajor = mongo.LoadRecordSortedAsc<Majors>("majors", "Major");
        queryMinor = mongo.LoadRecordSortedAsc<Minors>("minors", "Minor");

        foreach (var x in queryMajor)
        {

            MajorInfo toAdd = new MajorInfo();

            toAdd.majorName = x.Major;
            toAdd.majorGrade = x.GradeRequirements;
            toAdd.majorCourses = x.MajorRequirements;

            majorInfo.Add(toAdd);
        }

        foreach (var x in queryMinor)
        {

            MinorInfo toAdd2 = new MinorInfo();

            toAdd2.minorName = x.Minor;
            toAdd2.minorGrade = x.GradeRequirements;
            toAdd2.minorCourses = x.MinorRequirements;

            minorInfo.Add(toAdd2);
        }
        
    }


}
