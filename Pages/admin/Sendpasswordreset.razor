@page "/admin/sendpasswordreset"
@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar snackbar


<h2>Send password reset</h2>

<MudTextField @bind-Value="email" Label="Email" InputType="InputType.Email" Variant="Variant.Outlined" id="textFieldColor" Style="@theme.textFieldColor"></MudTextField>
<MudButton @onclick="submitForm" Variant="Variant.Outlined" class="btncolor">submit</MudButton>

@code 
{
    Mongo mongo = new Mongo("college-site-2");
    Theme theme = new Theme();

    bool validForm = true;

    private static string? email { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var accountTypeCheck = await storage.GetAsync<string>("accountType");

            if (accountTypeCheck.Value != "Admin")
            {
                navigate.NavigateTo("/homepage");
            }
        }
        catch
        {
            navigate.NavigateTo("/homepage");
        }
    }

    private string genPassword()
    {
        var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        string stringChars = "";
        var random = new Random();

        for (int i = 0; i < 8; i++)
        {
            stringChars += (chars[random.Next(chars.Length)]);

            Console.WriteLine(stringChars);
        }

        return stringChars.ToString();
    }

    private void submitForm()
    {
        try
        {
            //form validation
            if (email == null || email == "")
            {
                validForm = false;
            }

            //sanity check not needed
            bool sanityCheck = true;

            if (validForm && sanityCheck)
            {
                Mailtrap mail = new Mailtrap();
                var queryAllUser = mongo.LoadRecordByString<AllUser>("allUser", "Email", email);
                string newPassword = genPassword();
                Console.WriteLine(newPassword);
                queryAllUser.Password = newPassword;
                mongo.UpsertRecord<AllUser>("allUser", queryAllUser.Id, queryAllUser);
                mail.sendMail("Admin@clearwater.edu", email, "Password reset", $"new password: {newPassword}");
                snackbar.Add("Password reset was sent", Severity.Success);
            }
            else
            {
                snackbar.Add("Password reset was not sent", Severity.Error);
            }
        }
        catch
        {
            snackbar.Add("Password reset was not sent", Severity.Error);
        }
    }
}
