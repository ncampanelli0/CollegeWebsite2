@page "/admin/removeuser"
@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar snackbar

<h2>Remove user</h2>

<MudTextField @bind-Value="userID" Label="User ID" Variant="Variant.Outlined"></MudTextField>
<MudButton @onclick="submitForm" Variant="Variant.Outlined" Color="Color.Success">submit</MudButton>


@code 
{
    Mongo mongo = new Mongo("college-site-2");

    private static string userID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var accountTypeCheck = await storage.GetAsync<string>("accountType");

            if (accountTypeCheck.Value != "Admin")
            {
                navigate.NavigateTo("/homepage");
            }
        }
        catch
        {
            navigate.NavigateTo("/homepage");
        }
    }




    private void submitForm()
    {
        bool validForm = true;

        //form validation
        if (userID == null || userID == "")
        {
            validForm = false;
        }

        //sanity check not needed
        bool sanityCheck = true;



        if (validForm && sanityCheck)
        {
            try
            {
                var queryAllUserID = mongo.LoadRecordByString<AllUser>("allUser", "UserID", userID);
                var queryClasses = mongo.LoadRecord<Classes>("classes");

                foreach (var x in queryClasses)
                {
                    foreach (var y in x.Enrolled)
                    {
                        if (y.UserID == userID)
                        {
                            y.UserID = "Removed User";
                        }
                    }
                }

                mongo.DeleteRecordById<AllUser>("allUser", queryAllUserID.Id);
                snackbar.Add("User was removed successfully", Severity.Success);
            }
            catch
            {
                snackbar.Add("User was not removed successfully", Severity.Error);
            }
        }
        else
        {
            snackbar.Add("User was not removed successfully", Severity.Error);
        }
    }

}
