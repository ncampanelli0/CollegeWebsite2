@page "/admin/addclasssection"
@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar snackbar

<h2>Add class section</h2>

<MudNumericField @bind-Value="courseID" Label="course id" Variant="Variant.Outlined" Min="1000" Max="9999"></MudNumericField>
<MudNumericField @bind-Value="buildingID" Label="building id" Variant="Variant.Outlined" Min="1" Max="3"></MudNumericField>
<MudNumericField @bind-Value="maxCapacity" Label="max capacity" Variant="Variant.Outlined" Min="5" Max="30"></MudNumericField>
<MudNumericField @bind-Value="roomID" Label="room id" Variant="Variant.Outlined"></MudNumericField>
<MudSelect @bind-Value="day" T="string" Label="Day" AnchorOrigin="Origin.BottomCenter">
    <MudSelectItem Value="@("Monday & Wednesday")" />
    <MudSelectItem Value="@("Tuesday & Thursday")" />
    <MudSelectItem Value="@("Monday")" />
    <MudSelectItem Value="@("Tuesday")" />
    <MudSelectItem Value="@("Wednesday")" />
    <MudSelectItem Value="@("Thursday")" />
    <MudSelectItem Value="@("Friday")" />
</MudSelect>
<MudButton @onclick="submitForm" Variant="Variant.Outlined" Color="Color.Success">submit</MudButton>

@code 
{

    //must be written in form field:
    private static int? courseID { get; set; }
    private static int? buildingID { get; set; }
    private static string? day { get; set; }
    private static int? maxCapacity { get; set; }
    private static int? roomID { get; set; }

    //comes from course:
    private static int? CRN { get; set; }
    private static string? courseName { get; set; }
    private static int? credits { get; set; }
    private static string? department { get; set; }
    private static string? description { get; set; }
    private static string[]? enrolled { get; set; }
    private static DateTime? gradeLimit { get; set; }
    private static string[]? minimumRequirement { get; set; }
    private static string? section { get; set; }
    private static string? type { get; set; }

    //comes from timeWindow:
    private static DateTime? startDate { get; set; }
    private static DateTime? withdrawLimit { get; set; }
    private static string? semester { get; set; }
    private static DateTime? endDate { get; set; }
    private static DateTime? registerationLimit { get; set; }

    //comes from allUser:
    private static string? profFirstName { get; set; }
    private static string? profLastName { get; set; }
    private static string? professorName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var accountTypeCheck = await storage.GetAsync<string>("accountType");

        if (accountTypeCheck.Value != "Admin")
        {
            navigate.NavigateTo("/homepage");
        }
    }

    private void submitForm()
    {
        //form validation
        bool validForm = true;
        
        if (courseID == null)
        {
            validForm = false;
        }
        else if (buildingID == null)
        {
            validForm = false;
        }
        else if (day == null)
        {
            validForm = false;
        }
        else if (maxCapacity == null)
        {
            validForm = false;
        }
        else if (roomID == null)
        {
            validForm = false;
        }

        if (validForm)
        {

        }
    }
}
