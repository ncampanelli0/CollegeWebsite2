@page "/admin/addprofessorclass"
@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar snackbar

<h2>Add professor to class</h2>

<MudTextField @bind-Value="userID" Label="User ID" Variant="Variant.Outlined" id="textFieldColor" Style="@theme.textFieldColor"></MudTextField>
<MudTextField @bind-Value="CRN" Label="CRN" Variant="Variant.Outlined" id="textFieldColor" Style="@theme.textFieldColor"></MudTextField>
<MudButton @onclick="submitForm" Variant="Variant.Outlined" class="btncolor">submit</MudButton>



@code
{
    Mongo mongo = new Mongo("college-site-2");
    Theme theme = new Theme();

    private static string userID { get; set; }
    private static string CRN { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var accountTypeCheck = await storage.GetAsync<string>("accountType");

            if (accountTypeCheck.Value != "Admin")
            {
                navigate.NavigateTo("/homepage");
            }
        }
        catch
        {
            navigate.NavigateTo("/homepage");
        }
    }

    private void submitForm()
    {
        try
        {
            bool validForm = true;

            //form validation
            if ((userID == null || userID == "") && !(userID.Contains("FCC")))
            {
                validForm = false;
            }
            else if (CRN == null || CRN == "")
            {
                validForm = false;
            }

            //sanity check
            bool sanityCheck = true;
            if (validForm)
            {
                var queryProfessor = mongo.LoadRecordByString<AllUser>("allUser", "UserID", userID);
                var queryClass = mongo.LoadRecordByString<Classes>("classes", "CRN", CRN);

                if (queryProfessor.Department != queryClass.Department)
                {
                    sanityCheck = false;
                }

                if (queryClass.StartDate.ToLocalTime() < DateTime.Now.ToLocalTime())
                {
                    sanityCheck = false;
                }
            }

            


            if (validForm && sanityCheck)
            {

                var queryClassesID = mongo.LoadRecordByString<Classes>("classes", "CRN", CRN);
                var queryAllUserID = mongo.LoadRecordByString<AllUser>("allUser", "UserID", userID);

                queryClassesID.ProfFirstName = queryAllUserID.FirstName;
                queryClassesID.ProfLastName = queryAllUserID.LastName;
                queryClassesID.ProfessorName = $"{queryAllUserID.FirstName} {queryAllUserID.LastName}";

                mongo.UpsertRecord<Classes>("classes", queryClassesID.Id, queryClassesID);
                snackbar.Add("Professor was added to class successfully", Severity.Success);
            }
            else
            {
                snackbar.Add("Professor was not added to class succesfully", Severity.Error);
            }
        }
        catch
        {
            snackbar.Add("Professor was not added to class succesfully", Severity.Error);
        }

    }
}
