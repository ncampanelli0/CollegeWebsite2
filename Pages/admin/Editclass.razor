@page "/admin/editclass"
@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar snackbar

<h3>Edit class</h3>

<MudNumericField @bind-Value="courseID" Label="Course ID" Variant="Variant.Outlined" Min="1000" Max="9999"></MudNumericField>
<MudNumericField @bind-Value="roomID" Label="Room ID" Variant="Variant.Outlined" Min="1" Max="99"></MudNumericField>
<MudNumericField @bind-Value="buildingID" Label="Building ID" Variant="Variant.Outlined" Min="1" Max="3"></MudNumericField>
<MudNumericField @bind-Value="maxCapacity" Label="Max Capacity" Variant="Variant.Outlined" Min="5" Max="30"></MudNumericField>
<MudButton @onclick="submitForm" Variant="Variant.Outlined" Color="Color.Success">submit</MudButton>


@code 
{
    Mongo mongo = new Mongo("college-site-2");
    Theme theme = new Theme();


    private static int courseID { get; set; }
    private static int roomID { get; set; }
    private static int buildingID { get; set; }
    private static int maxCapacity { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var accountTypeCheck = await storage.GetAsync<string>("accountType");

            if (accountTypeCheck.Value != "Admin")
            {
                navigate.NavigateTo("/homepage");
            }
        }
        catch
        {
            navigate.NavigateTo("/homepage");
        }
    }


    private void submitForm()
    {
        try
        {
            bool validForm = true;

            //form validation
            if (courseID == null || !(courseID >= 1000 && courseID <= 9999))
            {
                validForm = false;
            }
            else if (roomID == null || !(roomID <= 1 && roomID >= 99))
            {
                validForm = false;
            }
            else if (buildingID == null || !(buildingID >= 1 && buildingID <= 3))
            {
                validForm = false;
            }
            else if (maxCapacity == null || !(maxCapacity >= 5 && maxCapacity <= 30))
            {
                validForm = false;
            }

            //sanity check
            bool sanityCheck = true;

            if (validForm)
            {
                var queryClassID = mongo.LoadRecordByInt<Classes>("classes", "CourseID", courseID);

                if (queryClassID.Enrolled.Count <= maxCapacity)
                {
                    sanityCheck = false;
                }

                if (queryClassID.RoomID == roomID && queryClassID.BuildingID == buildingID)
                {
                    sanityCheck = false;
                }
            }


            if (validForm && sanityCheck)
            {
                var queryClassesID = mongo.LoadRecordByInt<Classes>("classes", "CourseID", courseID);

                queryClassesID.CourseID = courseID;
                queryClassesID.RoomID = roomID;
                queryClassesID.BuildingID = buildingID;
                queryClassesID.MaxCapacity = maxCapacity;

                mongo.UpsertRecord<Classes>("classes", queryClassesID.Id, queryClassesID);
                snackbar.Add("Class edited successfully", Severity.Success);
            }
            else
            {
                snackbar.Add("Class was not edited successfully", Severity.Error);
            }
        }
        catch
        {
            snackbar.Add("Class was not edited successfully", Severity.Error);
        }
    }
}
