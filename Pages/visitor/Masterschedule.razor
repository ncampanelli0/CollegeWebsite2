@page "/visitor/masterschedule"

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="false" AllowAlternatingRows="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" Data="@queryUser"  TItem = "Classes" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="Classes" Property="CourseName" Title="Course Name" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="Section" Title="Section" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="Description" Title="Description" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="RoomID" Title="Room ID" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="BuildingID" Title="Building ID" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="Type" Title="Type" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="ProfessorName" Title="Professor" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="Department" Title="Department" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="CRN" Title="CRN" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="StartDate" Title="Start Date and Time" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="EndDate" Title="End Date and Time" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="RegistrationLimit" Title="Registeration Limit" Frozen="true" Width="0px" />
        <RadzenDataGridColumn TItem="Classes" Property="WithdrawLimit" Title="Withdraw Limit" Frozen="true" Width="0px" />
    </Columns>
</RadzenDataGrid>


@code
{

    Mongo mongo = new Mongo("college-site-2");
    List<Classes> queryUser;
    List<TimeWindow> queryTime;


    protected override async Task OnInitializedAsync()
    {
        queryUser = mongo.LoadRecord<Classes>("classes");
        queryTime = mongo.LoadRecord<TimeWindow>("timeWindow");
    }

}