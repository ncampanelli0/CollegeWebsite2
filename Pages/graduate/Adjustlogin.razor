@page "/graduate/adjustlogin"

@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar snackbar

<h2>Adjust User Login</h2>

<MudTextField @bind-Value="email" Label="email" Variant="Variant.Outlined"></MudTextField>
<MudButton @onclick="submitForm" Variant="Variant.Outlined" Color="Color.Success">submit</MudButton>


@code {

    Mongo mongo = new Mongo("college-site-2");

    bool validForm = true;

    private static string email { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var accountTypeCheck = await storage.GetAsync<string>("accountType");

        if (accountTypeCheck.Value != "Undergraduate")
        {
            navigate.NavigateTo("/homepage");
        }
    }

    private void submitForm()
    {
        bool validForm = true;

        if (email == "" || email == null)
        {
            validForm = false;
        }

        if (validForm)
        {
            Mailtrap mail = new Mailtrap();
            var queryAllUser = mongo.LoadRecordByString<AllUser>("allUser", "Email", email);

            mail.sendMail(email, "Admin@clearwater.edu", "Password reset request");
            snackbar.Add("Password reset request was sent", Severity.Success);
        }
        else
        {
            snackbar.Add("Password reset was not sent", Severity.Error);
        }
    }

    private void Mailtrap()
    {
        Mailtrap mail = new Mailtrap();
        mail.sendMail("sender@test.com", "reciever@test.com", "email subject", "body of email");
    }
}
