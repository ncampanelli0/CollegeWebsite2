@page "/undergraduate/changemajorminor"

@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar snackbar

<<<<<<< Updated upstream
<h2>Change Major and Minor</h2>

<MudTextField @bind-Value="majorID" Label="major id" Variant="Variant.Outlined"></MudTextField>
=======
<h2>Change Major or Minor</h2>

<MudTextField @bind-Value="majorID" Label="Major" Variant="Variant.Outlined"></MudTextField>
>>>>>>> Stashed changes
<MudSelect @bind-Value="majorID" T="string" Label="majorID" AnchorOrigin="Origin.BottomCenter">
    <MudSelectItem Value="@("American Studies")" />
    <MudSelectItem Value="@("Biological Sciences")" />
    <MudSelectItem Value="@("Chemistry and Physics")" />
    <MudSelectItem Value="@("Computer Science")" />
    <MudSelectItem Value="@("Criminology")" />
    <MudSelectItem Value="@("English")" />
    <MudSelectItem Value="@("Health and Society")" />
    <MudSelectItem Value="@("History and Philosophy")" />
    <MudSelectItem Value="@("Industrial and Labor Relations")" />
    <MudSelectItem Value="@("Mathematics ")" />
    <MudSelectItem Value="@("Modern Language")" />
    <MudSelectItem Value="@("Politics,Economics, and Law")" />
    <MudSelectItem Value="@("Psychology")" />
    <MudSelectItem Value="@("Sociology")" />
    <MudSelectItem Value="@("Visual Arts")" />

</MudSelect>

<<<<<<< Updated upstream
<MudTextField @bind-Value="minorID" Label="minor id" Variant="Variant.Outlined"></MudTextField>
=======
<MudTextField @bind-Value="minorID" Label="Minor" Variant="Variant.Outlined"></MudTextField>
>>>>>>> Stashed changes
<MudSelect @bind-Value="minorID" T="string" Label="minorID" AnchorOrigin="Origin.BottomCenter">
    <MudSelectItem Value="@("Chemistry")" />
    <MudSelectItem Value="@("Computer Information Science")" />
    <MudSelectItem Value="@("Environmental Studies")" />
    <MudSelectItem Value="@("Global Studies")" />
    <MudSelectItem Value="@("Hispanic Culture Studies")" />
    <MudSelectItem Value="@("Mathematics")" />
    <MudSelectItem Value="@("Media Design")" />
    <MudSelectItem Value="@("Media and Communications")" />
    <MudSelectItem Value="@("Philosophy and Religion")" />
    <MudSelectItem Value="@("Physics")" />
    <MudSelectItem Value="@("PreLaw Studies")" />
    <MudSelectItem Value="@("Prehealth Professions")" />
    <MudSelectItem Value="@("Public Policy")" />
    <MudSelectItem Value="@("Spanish")" />
    <MudSelectItem Value="@("Visual Arts")" />
    <MudSelectItem Value="@("No Minor")" />
   
</MudSelect>
<<<<<<< Updated upstream
<MudButton @onclick="submitForm" Variant="Variant.Outlined" Color="Color.Success">submit</MudButton>

@code
{
 protected override async Task OnInitializedAsync()
    {
        var accountTypeCheck = await storage.GetAsync<string>("accountType");

=======

<MudButton @onclick="submitForm" Variant="Variant.Outlined" Color="Color.Success">submit</MudButton>

@code
{
 protected override async Task OnInitializedAsync()
    {
        var accountTypeCheck = await storage.GetAsync<string>("accountType");

>>>>>>> Stashed changes
        if (accountTypeCheck.Value != "Undergraduate")
        {
            navigate.NavigateTo("/homepage");
        }
<<<<<<< Updated upstream
    }

    
=======
        }

    private static string major { get; set; }
    private static string minor { get; set; }

    private static void submitForm()
    {
        bool validForm = true;

        if (major == null || major == "")
        {
            validForm = false;
        }
        else if (minor == null || minor == "")
        {
            validForm = false;
        }
        
        if (validForm)
        {
            var queryAllUserID = mongo.LoadRecordByString<AllUser>("allUser", "UserID", userID);

            queryAllUserID.Major = major;
            queryAllUserID.Minor = minor;

            mongo.UpsertRecord<AllUser>("allUser", queryAllUserID.Id, queryAllUserID);
            snackbar.Add("Major/Minor was edited successfully", Severity.Success);
            
        }
        else
        {
            snackbar.Add("Major/Minor not edited successfully", Severity.Error);
        }
    }
}
>>>>>>> Stashed changes
}