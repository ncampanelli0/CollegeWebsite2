@page "/faculty/viewfacultyschedule"
@inject ProtectedLocalStorage storage
@inject NavigationManager navigate
@inject ISnackbar Snackbar

<h1>Schedule</h1>
<br/><br/>
<br/><br/>
 <MudExpansionPanels MultiExpansion="true">
     @foreach (var item in popList)
      {
        <MudExpansionPanel Text=@item.CourseName>
            Credits: @item.Credits <br /> <br />
            CRN: @item.CRN <br /> <br />
           Semester:  Spring @item.startDateTime.Year<br /> <br />
            Building: @item.BuildingID <br /> <br />
           Room:  @item.RoomID <br /> <br />
           Time: @item.startDateTime.ToString("hh:mm tt") - @item.endDateTime.ToString("hh:mm tt")<br /> <br />
            Day: @item.Day <br /> <br />
    </MudExpansionPanel>
      }
    
   
</MudExpansionPanels>

@code
{
      Mongo mongo = new Mongo("college-site-2");
      //List<Classes> queryClass;
      private List<popTable2> popList = new List<popTable2> { };

      public class popTable2
    {
      
        public string CourseName{get; set;}
        public int? Credits { get; set; }
        public int? CRN { get; set; }
        public string Semester { get; set; }
        public int? BuildingID { get; set; }

        public int? RoomID { get; set; }
        public DateTime startDateTime{ get; set; }
        public DateTime endDateTime { get; set; }
        public string Day { get; set; }
        
    }



    protected override async Task OnInitializedAsync()
    {
      Console.WriteLine("0");
      var queryClass = mongo.LoadRecord<Classes>("classes");
            Console.WriteLine("0");
    var firstNameCheck = await storage.GetAsync<string>("firstName");
        Console.WriteLine(firstNameCheck.Value);
        var lastNameCheck = await storage.GetAsync<string>("lastName");
    Console.WriteLine(lastNameCheck.Value);
    //var semesterCheck = await storage.GetAsync<string>("semester");
       
        foreach(var x in queryClass){
                  Console.WriteLine("0");
            if(x.ProfFirstName == firstNameCheck.Value && x.ProfLastName == lastNameCheck.Value && x.StartDate.Year == 2023){
                popTable2 schedule = new popTable2();
                schedule.CourseName = x.CourseName;
                schedule.Credits = x.Credits;
                schedule.CRN = x.CRN;
                schedule.Semester = x.Semester;
                schedule.BuildingID = x.BuildingID;
                schedule.RoomID = x.RoomID;
                schedule.Day = x.Day;
                schedule.startDateTime = x.StartDate;
                schedule.endDateTime = x.EndDate;
                popList.Add(schedule);
            }
                
          // && x.Semester == "Spring"
        }
    }
    
    
}